@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* Text highlighting */
::selection {
  background: #a1224b;
}

/* `Globe` components */
.globe-container {
  display: flex;
  flex-direction: column;
  height: 100lvh;

  & > div {
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
    z-index: -10;
    animation: fadeIn 5s ease-in-out;
    background-color: rgb(0, 0, 0);
  }
}
.content-container {
  z-index: 10;
}

/* Animations */
@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.fade-in {
  animation: fadeIn 2.5s ease-in-out;
}
@keyframes fadeInDelayed {
  0% {
    opacity: 0;
  }
  75% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.fade-in-delayed {
  animation: fadeInDelayed 2.33s ease-in-out;
}
@keyframes blink {
  50% {
    opacity: 0;
  }
}
.blink {
  animation: blink 1s step-start infinite;
  pointer-events: none;
}
@keyframes scaleIn {
  0%,
  100% {
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transform-origin: center center;
  }

  0% {
    opacity: 0;
    transform: matrix(0.92, 0, 0, 0.92, 0, 0);
  }

  100% {
    opacity: 1;
    transform: matrix(1, 0, 0, 1, 0, 0);
  }
}
.scale-in {
  animation-name: scaleIn;
  animation-duration: 650ms;
  animation-fill-mode: both;
  animation-iteration-count: 1;
  animation-delay: 150ms;
}
@keyframes marquee {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(calc(-100% - 1rem));
  }
}
.marquee {
  position: relative;
  display: flex;
  overflow: hidden;
  user-select: none;
  gap: 1rem;
}
.marquee-content {
  display: flex;
  justify-content: space-around;
  flex-shrink: 0;
  gap: 1rem;
  min-width: 100%;
  animation: marquee 10s linear infinite;
}

/* Lightbox */
.photoswipe--custom {
  --pswp-bg: white !important;
}

/* HDR Image Support */
.hdr-image {
  /* Smooth transitions for HDR adjustments */
  transition: filter 0.3s ease, opacity 0.3s ease;
}

.hdr-enhanced {
  /* Enhanced contrast and brightness for HDR displays */
  filter: contrast(1.1) brightness(1.05);
}

/* HDR display optimizations */
@media (dynamic-range: high) {
  .hdr-enhanced {
    /* More aggressive enhancements for true HDR displays */
    filter: contrast(1.15) brightness(1.1) saturate(1.05);
  }
  
  /* Optimize masonry layout for HDR */
  .masonry-item {
    border-radius: 4px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
}

/* P3 color gamut support */
@media (color-gamut: p3) {
  .hdr-image[data-color-space="P3"] {
    /* Use P3 color space when available */
    color-space: display-p3;
  }
}

/* Rec2020 color gamut support */
@media (color-gamut: rec2020) {
  .hdr-image[data-color-space="Rec2020"] {
    /* Use Rec2020 color space when available */
    color-space: rec2020;
  }
}

/* High luminance displays */
@media (min-luminance: 100) {
  .hdr-enhanced {
    /* Adjust for very bright displays */
    filter: contrast(1.2) brightness(1.15) saturate(1.1);
  }
}

/* Dark mode HDR adjustments */
@media (prefers-color-scheme: dark) and (dynamic-range: high) {
  .hdr-enhanced {
    /* Reduce brightness for dark mode HDR */
    filter: contrast(1.1) brightness(0.95) saturate(1.05);
  }
}

/* Loading states for HDR images */
.hdr-image[data-loading="true"] {
  opacity: 0.7;
  filter: blur(1px);
}

/* HDR metadata tooltips */
.hdr-image[data-max-luminance]:hover::after {
  content: "HDR: " attr(data-max-luminance) " nits";
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap;
  pointer-events: none;
  z-index: 1000;
}
